<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks">

    <SolidColorBrush x:Key="MyBackgroud" Color="#e0ecf8"/>
    <SolidColorBrush x:Key="MyBorderBrush" Color="#c0c0c0"/>
    <SolidColorBrush x:Key="MyInfoPannelBackgroud" Color="#bdd7ee"/>
    <SolidColorBrush x:Key="MyButtonBackground" Color="#377efe"/>
    <SolidColorBrush x:Key="MyGroupTitleBackground" Color="#4d75cb"/>
    <SolidColorBrush x:Key="MyInfoTextForeground" Color="#4d75cb"/>
    <sys:Double x:Key="MyScoreBoardHeadHeight">26</sys:Double>

    <Style x:Key="MyCommonText" TargetType="TextBlock">
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="Foreground" Value="{StaticResource MyInfoTextForeground}"/>
    </Style>

    <Style x:Key="MyNumberTextStyle" TargetType="TextBlock" BasedOn="{StaticResource MyCommonText}">
        <Setter Property="FontFamily" Value="/Fonts/#Bebas Neue Hesong"/>
    </Style>

    <Style x:Key="MyScoreBoardTitleTextStyle" TargetType="TextBlock">
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>

    <Style x:Key="MyScoreBoardNumberTextStyle" TargetType="TextBlock" BasedOn="{StaticResource MyNumberTextStyle}">
        <Setter Property="Foreground" Value="{StaticResource MyInfoTextForeground}"/>
        <Setter Property="FontSize" Value="24"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>

    <Style x:Key="MyScoreBoardNumberTextRightThinStyle" TargetType="TextBlock" BasedOn="{StaticResource MyScoreBoardNumberTextStyle}">
        <Setter Property="Foreground" Value="{StaticResource MyInfoTextForeground}"/>
        <Setter Property="FontSize" Value="24"/>
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>

    <Style x:Key="MyHeadText" BasedOn="{StaticResource MyCommonText}" TargetType="TextBlock">
        <Setter Property="FontSize" Value="24"/>
    </Style>

    <Style x:Key="MyCommonButton" TargetType="Button">
        <Setter Property="Background" Value="#377efe"/>
        <Setter Property="Foreground" Value="#e0ecf8"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="5" Background="{TemplateBinding Background}" BorderThickness="1" BorderBrush="{StaticResource MyBorderBrush}">
                        <Grid>
                            <ContentPresenter x:Name="MyContentPresenter" Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,0" />
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="LightBlue" />
                            <Setter Property="Foreground" Value="#e0ecf8" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="DeepSkyBlue" />
                            <Setter Property="Foreground" Value="#e0ecf8" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" Value="Gray"/>
                            <Setter Property="Foreground" Value="#e0ecf8"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MyToggleButton" TargetType="ToggleButton">
        <Setter Property="Background" Value="{StaticResource MyBackgroud}"/>
        <Setter Property="Foreground" Value="#e0ecf8"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border CornerRadius="5" Background="{TemplateBinding Background}" BorderThickness="1" BorderBrush="{StaticResource MyBorderBrush}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="48"/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <iconPacks:PackIconMaterial Grid.Column="0" x:Name="_ToggleIcon" Height="32" Width="32" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            <ContentPresenter Grid.Column="1" Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,0" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="_ToggleIcon" Property="Kind" Value="ToggleSwitch"/>
                            <Setter TargetName="_ToggleIcon" Property="Foreground" Value="Green"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter TargetName="_ToggleIcon" Property="Kind" Value="ToggleSwitchOffOutLine"/>
                            <Setter TargetName="_ToggleIcon" Property="Foreground" Value="Gray"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="LightBlue" />
                            <Setter Property="Foreground" Value="#e0ecf8" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="DeepSkyBlue" />
                            <Setter Property="Foreground" Value="#e0ecf8" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" Value="Gray"/>
                            <Setter Property="Foreground" Value="#e0ecf8"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MyTinyButton" TargetType="Button" BasedOn="{StaticResource MyCommonButton}">
        <Setter Property="Width" Value="24"/>
        <Setter Property="Height" Value="24"/>
        <Setter Property="FontSize" Value="24"/>
    </Style>

    <Style x:Key="MySamllButton" TargetType="Button" BasedOn="{StaticResource MyCommonButton}">
        <Setter Property="Width" Value="32"/>
        <Setter Property="Height" Value="32"/>
        <Setter Property="FontSize" Value="32"/>
    </Style>

    <Style x:Key="MyMiddleButton" TargetType="Button" BasedOn="{StaticResource MyCommonButton}">
        <Setter Property="Width" Value="48"/>
        <Setter Property="Height" Value="48"/>
        <Setter Property="FontSize" Value="48"/>
    </Style>

    <Style x:Key="MyMainButton" TargetType="Button" BasedOn="{StaticResource MyCommonButton}">
        <Setter Property="Background" Value="#467fff"/>
        <Setter Property="Foreground" Value="#e0ecf8"/>
        <Setter Property="Width" Value="64"/>
        <Setter Property="Height" Value="64"/>
        <Setter Property="FontSize" Value="48"/>
        <Setter Property="Margin" Value="1 0 1 0"/>
    </Style>

    <Style x:Key="ScoreButtonStyle" TargetType="Button">
        <Setter Property="Foreground" Value="{StaticResource MyInfoTextForeground}"/>
        <Setter Property="FontSize" Value="24"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="FontFamily" Value="/Fonts/#Bebas Neue Hesong"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <ContentPresenter x:Name="MyContentPresenter" Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,0" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="DeepSkyBlue" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Foreground" Value="DarkGreen" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="Gray"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


</ResourceDictionary>
