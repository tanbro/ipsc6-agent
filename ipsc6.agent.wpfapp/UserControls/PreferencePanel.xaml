<UserControl
    x:Class="ipsc6.agent.wpfapp.UserControls.PreferencePanel"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
    xmlns:local="clr-namespace:ipsc6.agent.wpfapp.UserControls"
    mc:Ignorable="d"
    xmlns:vm="clr-namespace:ipsc6.agent.wpfapp.ViewModels"
    xmlns:converters="clr-namespace:ipsc6.agent.wpfapp.Converters"
    d:DataContext="{d:DesignInstance Type=vm:MainViewModel}"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    Height="64" Width="42">

    <UserControl.Resources>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
        <converters:BooleanToRemixPinIconConverter x:Key="BooleanToRemixPinIconConverter" />

        <Style x:Key="PreferenceButtonStyle" TargetType="Button">
            <Setter Property="Foreground" Value="Gray" />
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}">
                            <Grid>
                                <ContentPresenter Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Foreground" Value="DarkGray" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Foreground" Value="LightGray" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="DimGray" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="MenuButtonStyle" TargetType="Button" BasedOn="{StaticResource MyTinyButton}">
            <Setter Property="Height" Value="Auto"/>
            <Setter Property="Width" Value="Auto"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Margin" Value="2"/>
        </Style>

        <sys:Boolean x:Key="True">True</sys:Boolean>
        <sys:Boolean x:Key="False">False</sys:Boolean>
    </UserControl.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <Button Grid.Row="0" Style="{StaticResource PreferenceButtonStyle}" Click="Preference_Button_Click">
            <StackPanel>
                <ContentControl>
                    <iconPacks:MaterialDesign Height="16" Width="16" Kind="Settings"/>
                </ContentControl>
                <Popup x:Name="Preference_Popup" StaysOpen="False" AllowsTransparency="True">
                    <Border BorderThickness="1" BorderBrush="{StaticResource MyBorderBrush}" CornerRadius="5" Background="{StaticResource MyBackgroud}">
                        <StackPanel Orientation="Vertical">
                            <Button Style="{StaticResource MenuButtonStyle}"
                                    Command="{Binding LoginCommand}">
                                <AccessText>登录(_I)...</AccessText>
                            </Button>
                            <Button Style="{StaticResource MenuButtonStyle}"
                                    Command="{Binding LogoutCommand}" CommandParameter="{StaticResource True}">
                                <AccessText>注销(_O)...</AccessText>
                            </Button>
                            <Button Style="{StaticResource MenuButtonStyle}"
                                    Command="{Binding ShowConfigWindowCmmand}">
                                <AccessText>设置(_P)...</AccessText>
                            </Button>
                            <Button Style="{StaticResource MenuButtonStyle}"
                                    Command="{Binding ExitCommand}">
                                <AccessText>退出(_E)...</AccessText>
                            </Button>
                            <Button Style="{StaticResource MenuButtonStyle}" Background="SlateGray"
                                    Command="{Binding ForceExitCommand}" CommandParameter="{StaticResource True}">
                                <AccessText>强行退出(_F)...</AccessText>
                            </Button>
                        </StackPanel>
                    </Border>
                </Popup>
            </StackPanel>
        </Button>

        <Button Grid.Row="1" Style="{StaticResource PreferenceButtonStyle}" Command="{Binding PinCommand}">
            <iconPacks:PackIconRemixIcon Height="16" Width="16" Kind="{Binding Pinned, Mode=OneWay, Converter={StaticResource BooleanToRemixPinIconConverter}}" />
        </Button>

    </Grid>

</UserControl>
